{"version":3,"file":"js/195.449ce9a4.js","mappings":"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","sources":["webpack://front/./src/axios/api/hComic.ts","webpack://front/./src/views/H-files/HfilesComic.vue?c3e2","webpack://front/./src/views/H-files/HfilesComic.vue","webpack://front/./src/views/H-files/HfilesComic.vue?86d9"],"sourcesContent":["import { get,post } from '@/axios/axios'\r\n\r\nexport function getHComicList(params:any)\r\n{\r\n    return get('/h/getHComicList',params)\r\n}\r\n\r\nexport function getHComicById(params:any)\r\n{\r\n    return get('/h/getHComicById',params)\r\n}\r\n\r\nexport function getHComicTagList(params:any)\r\n{\r\n    return get('/h/getHComicTagList',params)\r\n}\r\n\r\nexport function addHComicTag(params:any)\r\n{\r\n    return post('/h/addHComicTag',params)\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, isRef as _isRef, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = { class: \"HfilesComic\" }\nconst _hoisted_2 = { class: \"HfilesComic-search-div\" }\nconst _hoisted_3 = { class: \"HfilesComic-card-content\" }\nconst _hoisted_4 = { class: \"HfilesComic-card-details\" }\nconst _hoisted_5 = { class: \"HfilesComic-card-name-text\" }\nconst _hoisted_6 = { class: \"HfilesComic-card-tag-text\" }\nconst _hoisted_7 = { class: \"HfilesComic-card-tag-text\" }\nconst _hoisted_8 = { class: \"HfilesComic-card-tags-div\" }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"HfilesComic-card-tag-text\" }, \"TAGS:\", -1)\nconst _hoisted_10 = { class: \"HfilesComic-card-tag-text\" }\nconst _hoisted_11 = { class: \"HfilesComic-pagination-div\" }\n\nimport axios from 'axios';\r\nimport { getHComicList } from \"@/axios/api/hComic\"\r\nimport { ref,onMounted } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HfilesComic',\n  setup(__props) {\n\r\nconst router = useRouter()\r\nlet hComicList:any = ref([]) //本子列表数据\r\nlet scrollbarHeight = ref((window.innerHeight - 225) + \"px\") //设置滚动条高度\r\nlet searchInput = ref() //搜索输入内容\r\nlet mosaicSelect = ref(\"0\") //修正类型\r\nlet categorySelect = ref(\"0\") //类别\r\nlet page = ref(1) //页数\r\nlet pageTotal = ref(0) //总条数\r\n\r\nonMounted( () => \r\n{\r\n    getHComicListData()\r\n});\r\n\r\nconst getHComicListData = async () =>\r\n{\r\n    try //获取视频列表\r\n    {\r\n        const requestData = \r\n        {\r\n            searchInput: searchInput.value,\r\n            mosaicSelect: mosaicSelect.value,\r\n            categorySelect: categorySelect.value,\r\n            page: page.value,\r\n        }\r\n        const resp = await getHComicList(requestData);\r\n        pageTotal.value = resp.data.total\r\n        hComicList.value = resp.data.hcomicList;\r\n        hComicList.value.forEach((element:any,index:any) => \r\n        {\r\n            if(element.mosaic == 1)\r\n            {\r\n                element.mosaicType = \"success\"\r\n                element.mosaicText = \"无修正\"\r\n            }\r\n            else if(element.mosaic == 2)\r\n            {\r\n                element.mosaicType = \"warning\"\r\n                element.mosaicText = \"有修正\"\r\n            }\r\n            else\r\n            {\r\n                element.mosaicType = \"info\"\r\n                element.mosaicText = \"修正类别错误\"\r\n            }\r\n\r\n            if(element.category == 1)\r\n            {\r\n                element.categoryType = \"danger\"\r\n                element.categoryText = \"短篇\"\r\n            }\r\n            else if(element.category == 2)\r\n            {\r\n                element.categoryType = \"primary\"\r\n                element.categoryText = \"单本\"\r\n            }\r\n            else\r\n            {\r\n                element.mosaicType = \"warning\"\r\n                element.mosaicText = \"分类类别错误\"\r\n            }\r\n            element.background = \"\"\r\n            element.comicCover = axios.defaults.baseURL + \"/hComic/\" + element.fileName + \"/00001.webp\"\r\n        });\r\n    }\r\n    catch (error) \r\n    {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nconst mouseOver = (i:any) => //鼠标移入\r\n{\r\n    hComicList.value[i].background = \"border-width: 5px;\"\r\n}\r\n\r\nconst mouseLeave = (i:any) => //鼠标移出\r\n{\r\n    hComicList.value[i].background = \"\"\r\n}\r\n\r\nconst mouseClick = (i:any) => //点击跳转\r\n{\r\n    const url = router.resolve\r\n    ({\r\n        name: 'HfilesComicReader',\r\n        path: '/HfilesComicReader',\r\n        query:\r\n        {\r\n            comic: hComicList.value[i].id\r\n        },\r\n    })\r\n\r\n    window.open(url.href,'_blank')\r\n}\r\n\r\nconst resetScrollbarHeight = () => //重置滚动条高度(适应窗口大小)\r\n{\r\n    scrollbarHeight.value = (window.innerHeight - 225) + \"px\"\r\n}\r\n\r\nwindow.addEventListener('resize',resetScrollbarHeight) //监听窗口变动\r\n\r\nconst clickSearch = () =>\r\n{\r\n    getHComicListData()\r\n}\r\n\r\nconst pageChange = () =>\r\n{\r\n    getHComicListData()\r\n}\r\n\r\nconst reloadData = () => //选择分类时刷新数据\r\n{\r\n    getHComicListData()\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_search = _resolveComponent(\"search\")!\n  const _component_el_icon = _resolveComponent(\"el-icon\")!\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_el_input = _resolveComponent(\"el-input\")!\n  const _component_el_col = _resolveComponent(\"el-col\")!\n  const _component_el_option = _resolveComponent(\"el-option\")!\n  const _component_el_select = _resolveComponent(\"el-select\")!\n  const _component_el_row = _resolveComponent(\"el-row\")!\n  const _component_el_image = _resolveComponent(\"el-image\")!\n  const _component_el_tag = _resolveComponent(\"el-tag\")!\n  const _component_el_card = _resolveComponent(\"el-card\")!\n  const _component_el_scrollbar = _resolveComponent(\"el-scrollbar\")!\n  const _component_el_pagination = _resolveComponent(\"el-pagination\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_el_row, null, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_col, { span: 12 }, {\n            default: _withCtx(() => [\n              _createVNode(_component_el_input, {\n                modelValue: _unref(searchInput),\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => (_isRef(searchInput) ? (searchInput).value = $event : searchInput = $event)),\n                placeholder: \"搜索\"\n              }, {\n                append: _withCtx(() => [\n                  _createVNode(_component_el_button, { onClick: clickSearch }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_el_icon, null, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_search)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              }, 8, [\"modelValue\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_col, { span: 12 }, {\n            default: _withCtx(() => [\n              _createVNode(_component_el_select, {\n                modelValue: _unref(mosaicSelect),\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => (_isRef(mosaicSelect) ? (mosaicSelect).value = $event : mosaicSelect = $event)),\n                class: \"HfilesComic-search-select\",\n                onChange: reloadData\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_el_option, {\n                    label: \"所有修正\",\n                    value: \"0\"\n                  }),\n                  _createVNode(_component_el_option, {\n                    label: \"无修正\",\n                    value: \"1\"\n                  }),\n                  _createVNode(_component_el_option, {\n                    label: \"有修正\",\n                    value: \"2\"\n                  })\n                ]),\n                _: 1\n              }, 8, [\"modelValue\"]),\n              _createVNode(_component_el_select, {\n                modelValue: _unref(categorySelect),\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => (_isRef(categorySelect) ? (categorySelect).value = $event : categorySelect = $event)),\n                class: \"HfilesComic-search-select\",\n                onChange: reloadData\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_el_option, {\n                    label: \"所有类型\",\n                    value: \"0\"\n                  }),\n                  _createVNode(_component_el_option, {\n                    label: \"短篇\",\n                    value: \"1\"\n                  }),\n                  _createVNode(_component_el_option, {\n                    label: \"单本\",\n                    value: \"2\"\n                  })\n                ]),\n                _: 1\n              }, 8, [\"modelValue\"])\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      })\n    ]),\n    _createVNode(_component_el_scrollbar, { height: _unref(scrollbarHeight) }, {\n      default: _withCtx(() => [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(hComicList), (item, i) => {\n          return (_openBlock(), _createBlock(_component_el_card, {\n            key: i,\n            onMouseover: ($event: any) => (mouseOver(i)),\n            onMouseleave: ($event: any) => (mouseLeave(i)),\n            onClick: ($event: any) => (mouseClick(i)),\n            style: _normalizeStyle(item.background),\n            class: \"HfilesComic-card\"\n          }, {\n            default: _withCtx(() => [\n              _createElementVNode(\"div\", _hoisted_3, [\n                _createVNode(_component_el_image, {\n                  src: item.comicCover,\n                  class: \"HfilesComic-card-image\",\n                  fit: \"contain\"\n                }, null, 8, [\"src\"]),\n                _createElementVNode(\"div\", _hoisted_4, [\n                  _createElementVNode(\"span\", _hoisted_5, _toDisplayString(item.name), 1),\n                  _createVNode(_component_el_tag, {\n                    class: \"HfilesComic-card-mosaic-text\",\n                    effect: \"plain\",\n                    type: item.mosaicType\n                  }, {\n                    default: _withCtx(() => [\n                      _createElementVNode(\"span\", _hoisted_6, _toDisplayString(item.mosaicText), 1)\n                    ]),\n                    _: 2\n                  }, 1032, [\"type\"]),\n                  _createVNode(_component_el_tag, {\n                    class: \"HfilesComic-card-category-text\",\n                    effect: \"plain\",\n                    type: item.categoryType,\n                    round: \"\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createElementVNode(\"span\", _hoisted_7, _toDisplayString(item.categoryText), 1)\n                    ]),\n                    _: 2\n                  }, 1032, [\"type\"]),\n                  _createElementVNode(\"div\", _hoisted_8, [\n                    _hoisted_9,\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.hcomicTagList, (tagItem, tagI) => {\n                      return (_openBlock(), _createBlock(_component_el_tag, {\n                        key: tagI,\n                        class: \"HfilesComic-card-tags\",\n                        effect: \"dark\",\n                        type: \"info\",\n                        size: \"small\"\n                      }, {\n                        default: _withCtx(() => [\n                          _createElementVNode(\"span\", _hoisted_10, _toDisplayString(tagItem.name), 1)\n                        ]),\n                        _: 2\n                      }, 1024))\n                    }), 128))\n                  ])\n                ])\n              ])\n            ]),\n            _: 2\n          }, 1032, [\"onMouseover\", \"onMouseleave\", \"onClick\", \"style\"]))\n        }), 128))\n      ]),\n      _: 1\n    }, 8, [\"height\"]),\n    _createElementVNode(\"div\", _hoisted_11, [\n      _createVNode(_component_el_pagination, {\n        layout: \"prev, pager, next\",\n        \"current-page\": _unref(page),\n        \"onUpdate:currentPage\": _cache[3] || (_cache[3] = ($event: any) => (_isRef(page) ? (page).value = $event : page = $event)),\n        onCurrentChange: _cache[4] || (_cache[4] = ($event: any) => (pageChange())),\n        \"page-size\": 20,\n        total: _unref(pageTotal),\n        \"pager-count\": 5,\n        background: \"\"\n      }, null, 8, [\"current-page\", \"total\"])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n    <div class=\"HfilesComic\">\r\n        <div class=\"HfilesComic-search-div\">\r\n            <el-row>\r\n                <el-col :span=\"12\">\r\n                    <el-input\r\n                    v-model=\"searchInput\"\r\n                    placeholder=\"搜索\"\r\n                    >\r\n                    <template #append>\r\n                        <el-button @click=\"clickSearch\">\r\n                            <el-icon>\r\n                                <search/>\r\n                            </el-icon>\r\n                        </el-button>\r\n                    </template>\r\n                    </el-input>\r\n                </el-col>\r\n                <el-col :span=\"12\">\r\n                    <el-select v-model=\"mosaicSelect\" class=\"HfilesComic-search-select\" @change=\"reloadData\">\r\n                        <el-option label=\"所有修正\" value=\"0\" />\r\n                        <el-option label=\"无修正\" value=\"1\" />\r\n                        <el-option label=\"有修正\" value=\"2\" />\r\n                    </el-select>\r\n                    <el-select v-model=\"categorySelect\" class=\"HfilesComic-search-select\" @change=\"reloadData\">\r\n                        <el-option label=\"所有类型\" value=\"0\" />\r\n                        <el-option label=\"短篇\" value=\"1\" />\r\n                        <el-option label=\"单本\" value=\"2\" />\r\n                    </el-select>\r\n                </el-col>\r\n            </el-row>\r\n        </div>\r\n        <el-scrollbar :height=\"scrollbarHeight\">\r\n            <el-card\r\n                v-for=\"(item,i) in hComicList\"\r\n                :key=\"i\"\r\n                @mouseover=\"mouseOver(i)\"\r\n                @mouseleave=\"mouseLeave(i)\"\r\n                @click=\"mouseClick(i)\"\r\n                :style=\"item.background\"\r\n                class=\"HfilesComic-card\"\r\n                >\r\n                <div class=\"HfilesComic-card-content\">\r\n                    <el-image :src=\"item.comicCover\" class=\"HfilesComic-card-image\" fit=\"contain\"></el-image>\r\n                    <div class=\"HfilesComic-card-details\">\r\n                        <span class=\"HfilesComic-card-name-text\">{{ item.name }}</span>\r\n                        <el-tag\r\n                        class=\"HfilesComic-card-mosaic-text\"\r\n                        effect=\"plain\"\r\n                        :type=\"item.mosaicType\"\r\n                        >\r\n                        <span class=\"HfilesComic-card-tag-text\">{{ item.mosaicText }}</span>\r\n                        </el-tag>\r\n                        <el-tag\r\n                        class=\"HfilesComic-card-category-text\"\r\n                        effect=\"plain\"\r\n                        :type=\"item.categoryType\"\r\n                        round\r\n                        >\r\n                        <span class=\"HfilesComic-card-tag-text\">{{ item.categoryText }}</span>\r\n                        </el-tag>\r\n                        <div class=\"HfilesComic-card-tags-div\">\r\n                            <span class=\"HfilesComic-card-tag-text\">TAGS:</span>\r\n                            <el-tag\r\n                            v-for=\"(tagItem,tagI) in item.hcomicTagList\"\r\n                            :key=\"tagI\"\r\n                            class=\"HfilesComic-card-tags\"\r\n                            effect=\"dark\"\r\n                            type=\"info\"\r\n                            size=\"small\"\r\n                            >\r\n                            <span class=\"HfilesComic-card-tag-text\">{{ tagItem.name }}</span>\r\n                            </el-tag>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </el-card>\r\n        </el-scrollbar>\r\n        <div class=\"HfilesComic-pagination-div\">\r\n            <el-pagination layout=\"prev, pager, next\" v-model:current-page=\"page\" @current-change=\"pageChange()\" :page-size=\"20\" :total=\"pageTotal\" :pager-count=\"5\" background />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport axios from 'axios';\r\nimport { getHComicList } from \"@/axios/api/hComic\"\r\nimport { ref,onMounted } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nconst router = useRouter()\r\nlet hComicList:any = ref([]) //本子列表数据\r\nlet scrollbarHeight = ref((window.innerHeight - 225) + \"px\") //设置滚动条高度\r\nlet searchInput = ref() //搜索输入内容\r\nlet mosaicSelect = ref(\"0\") //修正类型\r\nlet categorySelect = ref(\"0\") //类别\r\nlet page = ref(1) //页数\r\nlet pageTotal = ref(0) //总条数\r\n\r\nonMounted( () => \r\n{\r\n    getHComicListData()\r\n});\r\n\r\nconst getHComicListData = async () =>\r\n{\r\n    try //获取视频列表\r\n    {\r\n        const requestData = \r\n        {\r\n            searchInput: searchInput.value,\r\n            mosaicSelect: mosaicSelect.value,\r\n            categorySelect: categorySelect.value,\r\n            page: page.value,\r\n        }\r\n        const resp = await getHComicList(requestData);\r\n        pageTotal.value = resp.data.total\r\n        hComicList.value = resp.data.hcomicList;\r\n        hComicList.value.forEach((element:any,index:any) => \r\n        {\r\n            if(element.mosaic == 1)\r\n            {\r\n                element.mosaicType = \"success\"\r\n                element.mosaicText = \"无修正\"\r\n            }\r\n            else if(element.mosaic == 2)\r\n            {\r\n                element.mosaicType = \"warning\"\r\n                element.mosaicText = \"有修正\"\r\n            }\r\n            else\r\n            {\r\n                element.mosaicType = \"info\"\r\n                element.mosaicText = \"修正类别错误\"\r\n            }\r\n\r\n            if(element.category == 1)\r\n            {\r\n                element.categoryType = \"danger\"\r\n                element.categoryText = \"短篇\"\r\n            }\r\n            else if(element.category == 2)\r\n            {\r\n                element.categoryType = \"primary\"\r\n                element.categoryText = \"单本\"\r\n            }\r\n            else\r\n            {\r\n                element.mosaicType = \"warning\"\r\n                element.mosaicText = \"分类类别错误\"\r\n            }\r\n            element.background = \"\"\r\n            element.comicCover = axios.defaults.baseURL + \"/hComic/\" + element.fileName + \"/00001.webp\"\r\n        });\r\n    }\r\n    catch (error) \r\n    {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nconst mouseOver = (i:any) => //鼠标移入\r\n{\r\n    hComicList.value[i].background = \"border-width: 5px;\"\r\n}\r\n\r\nconst mouseLeave = (i:any) => //鼠标移出\r\n{\r\n    hComicList.value[i].background = \"\"\r\n}\r\n\r\nconst mouseClick = (i:any) => //点击跳转\r\n{\r\n    const url = router.resolve\r\n    ({\r\n        name: 'HfilesComicReader',\r\n        path: '/HfilesComicReader',\r\n        query:\r\n        {\r\n            comic: hComicList.value[i].id\r\n        },\r\n    })\r\n\r\n    window.open(url.href,'_blank')\r\n}\r\n\r\nconst resetScrollbarHeight = () => //重置滚动条高度(适应窗口大小)\r\n{\r\n    scrollbarHeight.value = (window.innerHeight - 225) + \"px\"\r\n}\r\n\r\nwindow.addEventListener('resize',resetScrollbarHeight) //监听窗口变动\r\n\r\nconst clickSearch = () =>\r\n{\r\n    getHComicListData()\r\n}\r\n\r\nconst pageChange = () =>\r\n{\r\n    getHComicListData()\r\n}\r\n\r\nconst reloadData = () => //选择分类时刷新数据\r\n{\r\n    getHComicListData()\r\n}\r\n</script>\r\n\r\n<style>\r\n.HfilesComic-search-div\r\n{\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.HfilesComic-search-select\r\n{\r\n    width: 100px;\r\n    margin-left: 10px;\r\n}\r\n\r\n.HfilesComic-card-name-text\r\n{\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    margin: 0;\r\n}\r\n\r\n.HfilesComic-card-mosaic-text\r\n{\r\n    margin-left: 20px;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.HfilesComic-card-category-text\r\n{\r\n    margin-left: 10px;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.HfilesComic-card-tags-div\r\n{\r\n    margin: 10px 0px 0px 0px;\r\n}\r\n\r\n.HfilesComic-card-tags\r\n{\r\n    margin: 0px 0px 2px 10px;\r\n}\r\n\r\n.HfilesComic-card-tag-text\r\n{\r\n    font-weight: bold;\r\n}\r\n\r\n.HfilesComic-card\r\n{\r\n    border-color: #aaaaaa;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.HfilesComic-pagination-div\r\n{\r\n    margin-top: 10px;\r\n}\r\n\r\n.HfilesComic-card-image\r\n{\r\n    margin-top: 10px;\r\n    border-radius: 10px;\r\n    width: auto;\r\n    height: 150px;\r\n    margin-right: 20px;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.HfilesComic-card-content\r\n{\r\n    display: flex;\r\n}\r\n\r\n.HfilesComic-card-details\r\n{\r\n    margin-top: 10px;\r\n}\r\n</style>","import script from \"./HfilesComic.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./HfilesComic.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./HfilesComic.vue?vue&type=style&index=0&id=a15dcdb0&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["getHComicList","params","get","getHComicById","getHComicTagList","addHComicTag","post","_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_createElementVNode","_hoisted_10","_hoisted_11","_defineComponent","__name","setup","__props","router","useRouter","hComicList","ref","scrollbarHeight","window","innerHeight","searchInput","mosaicSelect","categorySelect","page","pageTotal","onMounted","getHComicListData","async","requestData","value","resp","data","total","hcomicList","forEach","element","index","mosaic","mosaicType","mosaicText","category","categoryType","categoryText","background","comicCover","axios","defaults","baseURL","fileName","error","console","mouseOver","i","mouseLeave","mouseClick","url","resolve","name","path","query","comic","id","open","href","resetScrollbarHeight","addEventListener","clickSearch","pageChange","reloadData","_ctx","_cache","_component_search","_resolveComponent","_component_el_icon","_component_el_button","_component_el_input","_component_el_col","_component_el_option","_component_el_select","_component_el_row","_component_el_image","_component_el_tag","_component_el_card","_component_el_scrollbar","_component_el_pagination","_openBlock","_createElementBlock","_createVNode","default","_withCtx","span","modelValue","_unref","$event","_isRef","placeholder","append","onClick","_","onChange","label","height","_Fragment","_renderList","item","_createBlock","key","onMouseover","onMouseleave","style","_normalizeStyle","src","fit","_toDisplayString","effect","type","round","hcomicTagList","tagItem","tagI","size","layout","onCurrentChange","__exports__"],"sourceRoot":""}